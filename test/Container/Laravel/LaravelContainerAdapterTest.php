<?php
/*
 * Copyright (c) 2015 Juan José Torroglosa Ramón
 *
 * This file is part of the Cliphar package.
 *
 * For the full copyright and license information, please view
 * the LICENSE file that was distributed with this source code.
 */

namespace Cliphar\Container\Laravel;


use Illuminate\Container\Container;
use Interop\Container\ContainerInterface;

class LaravelContainerAdapterTest extends \PHPUnit_Framework_TestCase
{
    /** @var  Container */
    private $laravelContainer;
    /** @var  ContainerInterface */
    private $container;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->laravelContainer = new Container();
        $this->container = new LaravelContainerAdapter($this->laravelContainer);
    }


    public function testHappyCase()
    {
        $this->laravelContainer->bind("foo", 'Cliphar\Container\Laravel\ResolvableClass');
        $this->assertInstanceOf('Cliphar\Container\Laravel\ResolvableClass', $this->container->get("foo"));
    }

    /**
     * @expectedException \Cliphar\Container\Exception\NotFoundException
     */
    public function testNotFoundException()
    {
        $this->container->get('non_existent_service');
    }

    /**
     * @expectedException \Cliphar\Container\Exception\ContainerException
     */
    public function testContainerException()
    {
        $this->container->get('Cliphar\Container\Laravel\UnresolvableClass');
    }
}

class ResolvableClass
{
}

class UnresolvableClass
{
    public function __construct($anyParameter)
    {
    }
}